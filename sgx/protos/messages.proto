syntax = "proto3";

// This defines all the functionalies that a remote server should provide.
// Currently we only support read / write. This ORAM data are generated by the server at random.
// If you need to upload data to the server, you should define other interfaces.
service sgx_oram {
  // Initialize the enclave and starts to negotiate a shared session key.
  rpc init_enclave(InitRequest) returns (InitReply) {}

  rpc read_block(ReadRequest) returns (ReadReply) {}

  rpc write_block(WriteRequest) returns (WriteReply) {}
}

message InitRequest {
  // The round variable indicates the current phase of the key negotiation.
  int32 round = 1;
  string content = 2;
}

message InitReply {
  bool success = 1;

  // Shared session key for symmetric encryption.
  // This is done by SGX's remote attestation procedure.
  // This field is valid iff. the negotiation finishes.
  string secret_key = 2;
}

message ReadRequest {
  uint32 address = 1;
}

message ReadReply {
  string block = 1;
  bool success = 2;
}

message WriteRequest {
  uint32 address = 1;
  string data = 2;
}

message WriteReply {
  bool success = 1;
}